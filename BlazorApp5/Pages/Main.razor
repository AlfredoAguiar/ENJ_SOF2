@page "/main"
@using System.Globalization
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Web

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<link href="css/main.css" rel="stylesheet" />
<div class="navbar">
    <a href="#" class="logo">Ativos Financeiros</a>
    <div class="nav-links">
        <NavLink href="/" class="nav-link">Home</NavLink>
        <div class="dropdown" @onclick="ToggleDropdown" @onmouseleave="CloseDropdown">
            <NavLink class="nav-link">
                Ativos Financeiros
                <span class="dropdown-arrow" style="@GetArrowRotation()"></span>
            </NavLink>
            @if (isDropdownVisible)
            {
                <div class="dropdown-content">
                    <NavLink href="/ativo" class="dropdown-link">Renda Fixa</NavLink>
                    <NavLink href="/ativo" class="dropdown-link">Renda Variável</NavLink>
                    <NavLink href="/ativo" class="dropdown-link">Fundos Imobiliários</NavLink>
                </div>
            }
        </div>
        <NavLink href="/services" class="nav-link">Services</NavLink>
        <NavLink href="/contact" class="nav-link">Contact</NavLink>
        <NavLink href="/feedback" class="nav-link">Dados Pessoais</NavLink>
    </div>
</div>

<div class="content-container">
    <div class="title-container">
        <h1 class="page-title">Gestão de Ativos</h1>
        <button class="add-button" @onclick="ShowAddModal">
            <i class="fas fa-plus"></i> Adicionar Ativo
        </button>
    </div>
    <br/>
    <div class="table-container">
        <table>
            <thead>
            <tr>
                <th>ID</th>
                <th>Ativo ID</th>
                <th>Nome</th>
                <th>Montante Investido</th>
                <th>Duração (Meses)</th>
                <th>Taxa Juros Anual</th>
                <th></th>
            </tr>
            </thead>
            <tbody>
            @foreach (var item in orders)
            {
                <tr>
                    <td>@item.Id</td>
                    <td>@item.AtivoId</td>
                    <td>@item.Nome</td>
                    <td>@item.MontanteInvestido.ToString("C", new CultureInfo("pt-PT"))</td>
                    <td>@item.DuracaoMeses</td>
                    <td>@item.TaxaJurosAnual.ToString("P")</td>
                    <td>
                        <div class="button-group">
                            <button class="edit-button" @onclick="() => ShowEditModal(item)">Editar</button>
                            <button class="delete-button" @onclick="() => ShowDeleteModal(item.Id)">Apagar</button>
                        </div>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
</div>


<div class="modal @modalVisibility">
    <div class="modal-content">
        <span class="close-button" @onclick="HideDeleteModal">&times;</span>
        <p>Tem certeza de que deseja apagar este ativo?</p>
        <div class="modal-buttons">
            <button class="confirm-button" @onclick="ConfirmDelete">Confirmar</button>
            <button class="cancel-button" @onclick="HideDeleteModal">Cancelar</button>
        </div>
    </div>
</div>

<!-- Modal Structure for Adding Asset -->
<div class="modal @addModalVisibility">
    <div class="modal-content">
        <span class="close-button" @onclick="HideAddModal">&times;</span>
        <h2>Adicionar Novo Ativo</h2>
        <br/>
        <form @onsubmit="AddOrder">
            <label>
                Nome:
                <input type="text" @bind="newOrder.Nome" required />
            </label>
            <label>
                Montante Investido:
                <input type="number" @bind="newOrder.MontanteInvestido" required />
            </label>
            <label>
                Duração (Meses):
                <input type="number" @bind="newOrder.DuracaoMeses" required />
            </label>
            <label>
                Taxa Juros Anual (%):
                <input type="number" step="0.01" @bind="newOrder.TaxaJurosAnual" required />
            </label>
            <div class="modal-buttons">
                <button type="submit" class="confirm-button">Adicionar</button>
                <button type="button" class="cancel-button" @onclick="HideAddModal">Cancelar</button>
            </div>
        </form>
    </div>
</div>

<!-- Modal Structure for Edit Asset -->
<div class="modal @editModalVisibility">
    <div class="modal-content">
        <span class="close-button" @onclick="HideEditModal">&times;</span>
        <h2>Editar Ativo</h2>
        <br/>
        <form @onsubmit="SaveEdit">
            <label>
                Nome:
                <input type="text" @bind="editOrder.Nome" required />
            </label>
            <label>
                Montante Investido:
                <input type="number" @bind="editOrder.MontanteInvestido" required />
            </label>
            <label>
                Duração (Meses):
                <input type="number" @bind="editOrder.DuracaoMeses" required />
            </label>
            <label>
                Taxa Juros Anual (%):
                <input type="number" step="0.01" @bind="editOrder.TaxaJurosAnual" required />
            </label>
            <div class="modal-buttons">
                <button type="submit" class="confirm-button">Salvar</button>
                <button type="button" class="cancel-button" @onclick="HideEditModal">Cancelar</button>
            </div>
        </form>
    </div>
</div>



@code {
    private bool isDropdownVisible = false;
    private bool isModalVisible = false;
    private bool isAddModalVisible = false;
    private bool isEditModalVisible = false;
    private int itemToDeleteId = -1;

    private List<Order> orders = new List<Order>
    {
        new Order { Id = 1, AtivoId = 101, Nome = "Ativo A", MontanteInvestido = 1000.00m, DuracaoMeses = 12, TaxaJurosAnual = 0.05m },
        new Order { Id = 2, AtivoId = 102, Nome = "Ativo B", MontanteInvestido = 1500.00m, DuracaoMeses = 24, TaxaJurosAnual = 0.04m },
        new Order { Id = 3, AtivoId = 103, Nome = "Ativo C", MontanteInvestido = 2000.00m, DuracaoMeses = 36, TaxaJurosAnual = 0.03m },
        new Order { Id = 4, AtivoId = 104, Nome = "Ativo D", MontanteInvestido = 2500.00m, DuracaoMeses = 48, TaxaJurosAnual = 0.06m },
        new Order { Id = 5, AtivoId = 105, Nome = "Ativo E", MontanteInvestido = 3000.00m, DuracaoMeses = 60, TaxaJurosAnual = 0.07m },
        new Order { Id = 6, AtivoId = 106, Nome = "Ativo F", MontanteInvestido = 3500.00m, DuracaoMeses = 72, TaxaJurosAnual = 0.08m },
        new Order { Id = 7, AtivoId = 107, Nome = "Ativo G", MontanteInvestido = 4000.00m, DuracaoMeses = 84, TaxaJurosAnual = 0.09m }
    };

    private Order newOrder = new Order();
    private Order editOrder = new Order();

    private void ToggleDropdown()
    {
        isDropdownVisible = !isDropdownVisible;
    }

    private void CloseDropdown()
    {
        isDropdownVisible = false;
    }

    private string GetArrowRotation()
    {
        return isDropdownVisible ? "transform: rotate(225deg);" : "transform: rotate(45deg);";
    }

    private void ShowDeleteModal(int id)
    {
        itemToDeleteId = id;
        isModalVisible = true;
    }

    private void HideDeleteModal()
    {
        itemToDeleteId = -1;
        isModalVisible = false;
    }

    private void ConfirmDelete()
    {
        // Simula a exclusão sem remover o item da lista
        HideDeleteModal();
    }

    private void ShowAddModal()
    {
        isAddModalVisible = true;
        newOrder = new Order(); // Reset new order fields
    }

    private void HideAddModal()
    {
        isAddModalVisible = false;
    }

    private void AddOrder()
    {
        if (!string.IsNullOrEmpty(newOrder.Nome) && newOrder.MontanteInvestido > 0 && newOrder.DuracaoMeses > 0)
        {
            newOrder.Id = orders.Count + 1; // Assign a new ID
            newOrder.AtivoId = 100 + newOrder.Id; // Assign a new AtivoId
            orders.Add(newOrder);
            HideAddModal();
        }
    }

    private void ShowEditModal(Order order)
    {
        editOrder = new Order
        {
            Id = order.Id,
            AtivoId = order.AtivoId,
            Nome = order.Nome,
            MontanteInvestido = order.MontanteInvestido,
            DuracaoMeses = order.DuracaoMeses,
            TaxaJurosAnual = order.TaxaJurosAnual
        };
        isEditModalVisible = true;
    }

    private void HideEditModal()
    {
        isEditModalVisible = false;
    }

    private void SaveEdit()
    {
        var order = orders.FirstOrDefault(o => o.Id == editOrder.Id);
        if (order != null)
        {
            order.Nome = editOrder.Nome;
            order.MontanteInvestido = editOrder.MontanteInvestido;
            order.DuracaoMeses = editOrder.DuracaoMeses;
            order.TaxaJurosAnual = editOrder.TaxaJurosAnual;
        }
        HideEditModal();
    }

    private string modalVisibility => isModalVisible ? "visible" : "";
    private string addModalVisibility => isAddModalVisible ? "visible" : "";
    private string editModalVisibility => isEditModalVisible ? "visible" : "";

    private class Order
    {
        public int Id { get; set; }
        public int AtivoId { get; set; }
        public string Nome { get; set; }
        public decimal MontanteInvestido { get; set; }
        public int DuracaoMeses { get; set; }
        public decimal TaxaJurosAnual { get; set; }
    }
}