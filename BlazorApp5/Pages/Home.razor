@page "/"
@inject NavigationManager NavigationManager

<div class="container">
    <div class="content @(isSignIn ? "first-content" : "second-content")">
        <div class="first-column">
            @if (isSignIn)
            {
                <h2 class="title title-primary">Bem-vindo!</h2>
                <p class="description description-primary">Para continuar conectado a nós</p>
                <p class="description description-primary">por-favor faz o registo com os teus dados pessoais</p>
                <button @onclick="ToggleView" class="btn btn-primary">Registar</button>
            }
            else
            {
                <h2 class="title title-primary">hello, friend!</h2>
                <p class="description description-primary">Enter your personal details</p>
                <p class="description description-primary">and start journey with us</p>
                <button @onclick="ToggleView" class="btn btn-primary">sign up</button>
            }
        </div>
        <div class="second-column">
            <br/><br/><br/><br/>
            @if (isSignIn)
            {
                <h2 class="title title-second">Faça o seu Login</h2>
                <p class="description description-second">Insiria os seus dados</p>
                <EditForm Model="signUpModel" OnValidSubmit="HandleSignUpSubmit" class="form-container">
                    <DataAnnotationsValidator/>
                    <ValidationSummary/>
                    <div class="form">
                        <div class="input-group">
                            <i class="far fa-envelope icon-modify"></i>
                            <InputText @bind-Value="signUpModel.Email" placeholder="Email" class="form-input"/>
                        </div>

                        <div class="input-group">
                            <i class="fas fa-lock icon-modify"></i>
                            <InputText @bind-Value="signUpModel.Password" type="password" placeholder="Password" class="form-input"/>
                        </div>

                        <button type="submit" class="btn btn-second">sign up</button>
                    </div>
                </EditForm>
            }
            else
            {
                <h2 class="title title-second">sign in to developer</h2>
                <div class="social-media">
                    <ul class="list-social-media">
                        <li class="item-social-media"><i class="fab fa-facebook-f"></i></li>
                        <li class="item-social-media"><i class="fab fa-google-plus-g"></i></li>
                        <li class="item-social-media"><i class="fab fa-linkedin-in"></i></li>
                    </ul>
                </div>
                <p class="description description-second">or use your email account:</p>
                <EditForm Model="signInModel" OnValidSubmit="HandleSignInSubmit" class="form-container">
                    <DataAnnotationsValidator/>
                    <ValidationSummary/>
                    <div class="form">
                        <div class="input-group">
                            <i class="far fa-envelope icon-modify"></i>
                            <InputText @bind-Value="signInModel.Email" placeholder="Email" class="form-input"/>
                        </div>

                        <div class="input-group">
                            <i class="fas fa-lock icon-modify"></i>
                            <InputText @bind-Value="signInModel.Password" type="password" placeholder="Password" class="form-input"/>
                        </div>

                        <a class="password" href="#">forgot your password?</a>
                        <button type="submit" class="btn btn-second">sign in</button>
                    </div>
                </EditForm>
            }
        </div>
    </div>
</div>

@code {
    private bool isSignIn = true;

    private class SignUpModel
    {
        public string Name { get; set; }
        public string Email { get; set; }
        public string Password { get; set; }
    }

    private class SignInModel
    {
        public string Email { get; set; }
        public string Password { get; set; }
    }

    private SignUpModel signUpModel = new SignUpModel();
    private SignInModel signInModel = new SignInModel();

    private void ToggleView()
    {
        // Se estiver na tela de sign in (criar conta) e clicar no botão,
        // navega para a página de registro
        if (isSignIn)
        {
            NavigationManager.NavigateTo("login");
        }
        else
        {
            // Alternar a visualização normal se estiver na tela de sign up
            isSignIn = !isSignIn;
        }
    }

    private void HandleSignInSubmit()
    {
        // Handle sign in submission
        // Por exemplo, autenticar o usuário e navegar para a página principal
        Console.WriteLine($"Login attempt: {signInModel.Email}");
    }

    private void HandleSignUpSubmit()
    {
        // Handle sign up submission
        // Por exemplo, registrar o usuário e navegar para a página principal
        Console.WriteLine($"Registration: {signUpModel.Name}, {signUpModel.Email}");
    }
}