@page "/ativo3"
@using System.Globalization
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Web
@inject NavigationManager Navigation

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<link href="css/main.css" rel="stylesheet" />
<div class="navbar">
    <a href="/main" class="logo">Ativos Financeiros</a>
    <div class="nav-links">
        <NavLink href="/main" class="nav-link">Home</NavLink>
        <div class="dropdown" @onclick="ToggleDropdown" @onmouseleave="CloseDropdown">
            <NavLink class="nav-link">
                Ativos Financeiros
                <span class="dropdown-arrow" style="@GetArrowRotation()"></span>
            </NavLink>
            @if (isDropdownVisible)
            {
                <div class="dropdown-content">
                    <NavLink href="/ativo" class="dropdown-link">Depósitos a Prazo</NavLink>
                    <NavLink href="/ativo2" class="dropdown-link">Fundos de Investimento</NavLink>
                    <NavLink href="/ativo3" class="dropdown-link">Imóveis para Arrendamento</NavLink>
                </div>
            }
        </div>
        <NavLink href="/services" class="nav-link">Services</NavLink>
        <NavLink href="/dados" class="nav-link">Dados Pessoais</NavLink>
        <NavLink href="/" class="nav-link sair-button" @onclick="Logout">Sair</NavLink>
    </div>
</div>

<div class="content-container">
    <div class="title-container">
        <h1 class="page-title">Gestão de Imóveis para Arrendamento</h1>
        <button class="add-button" @onclick="ShowAddModal">
            <i class="fas fa-plus"></i> Adicionar Imóvel
        </button>
    </div>
    <br/>
    <div class="table-container">
        <table>
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Designação</th>
                    <th>Localização</th>
                    <th>Valor Propriedade</th>
                    <th>Valor Renda</th>
                    <th>Taxa Condomínio</th>
                    <th>Despesas Anuais</th>
                    <th>Percentagem Propriedade</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in imoveis)
                {
                    <tr>
                        <td>@item.Id</td>
                        <td>@item.Designacao</td>
                        <td>@item.Localizacao</td>
                        <td>@item.ValorPropriedade.ToString("C", new CultureInfo("pt-PT"))</td>
                        <td>@item.ValorRenda.ToString("C", new CultureInfo("pt-PT"))</td>
                        <td>@item.TaxaCondominio.ToString("C", new CultureInfo("pt-PT"))</td>
                        <td>@item.DespesasAnuais.ToString("C", new CultureInfo("pt-PT"))</td>
                        <td>@item.PercentagemPropriedade.ToString("P")</td>
                        <td>
                            <div class="button-group">
                                <button class="edit-button" @onclick="() => ShowEditModal(item)">Editar</button>
                                <button class="delete-button" @onclick="() => ShowDeleteModal(item.Id)">Apagar</button>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!-- Modal de Confirmação de Apagar -->
<div class="modal @modalVisibility">
    <div class="modal-content">
        <span class="close-button" @onclick="HideDeleteModal">&times;</span>
        <p>Tem certeza de que deseja apagar este imóvel?</p>
        <div class="modal-buttons">
            <button class="confirm-button" @onclick="ConfirmDelete">Confirmar</button>
            <button class="cancel-button" @onclick="HideDeleteModal">Cancelar</button>
        </div>
    </div>
</div>

<!-- Modal Adicionar -->
<div class="modal @addModalVisibility">
    <div class="modal-content">
        <span class="close-button" @onclick="HideAddModal">&times;</span>
        <h2>Adicionar Novo Imóvel</h2>
        <br/>
        <form @onsubmit="AddImovel">
            <label>
                Designação:
                <input type="text" @bind="newImovel.Designacao" required />
            </label>
            <label>
                Localização:
                <input type="text" @bind="newImovel.Localizacao" required />
            </label>
            <label>
                Valor Propriedade:
                <input type="number" @bind="newImovel.ValorPropriedade" required />
            </label>
            <label>
                Valor Renda:
                <input type="number" @bind="newImovel.ValorRenda" required />
            </label>
            <label>
                Taxa Condomínio:
                <input type="number" @bind="newImovel.TaxaCondominio" required />
            </label>
            <label>
                Despesas Anuais:
                <input type="number" @bind="newImovel.DespesasAnuais" required />
            </label>
            <label>
                Percentagem Propriedade (%):
                <input type="number" step="0.01" @bind="newImovel.PercentagemPropriedade" required />
            </label>
            <div class="modal-buttons">
                <button type="submit" class="confirm-button">Adicionar</button>
                <button type="button" class="cancel-button" @onclick="HideAddModal">Cancelar</button>
            </div>
        </form>
    </div>
</div>

<!-- Modal Editar -->
<div class="modal @editModalVisibility">
    <div class="modal-content">
        <span class="close-button" @onclick="HideEditModal">&times;</span>
        <h2>Editar Imóvel</h2>
        <br/>
        <form @onsubmit="SaveEdit">
            <label>
                Designação:
                <input type="text" @bind="editImovel.Designacao" required />
            </label>
            <label>
                Localização:
                <input type="text" @bind="editImovel.Localizacao" required />
            </label>
            <label>
                Valor Propriedade:
                <input type="number" @bind="editImovel.ValorPropriedade" required />
            </label>
            <label>
                Valor Renda:
                <input type="number" @bind="editImovel.ValorRenda" required />
            </label>
            <label>
                Taxa Condomínio:
                <input type="number" @bind="editImovel.TaxaCondominio" required />
            </label>
            <label>
                Despesas Anuais:
                <input type="number" @bind="editImovel.DespesasAnuais" required />
            </label>
            <label>
                Percentagem Propriedade (%):
                <input type="number" step="0.01" @bind="editImovel.PercentagemPropriedade" required />
            </label>
            <div class="modal-buttons">
                <button type="submit" class="confirm-button">Salvar</button>
                <button type="button" class="cancel-button" @onclick="HideEditModal">Cancelar</button>
            </div>
        </form>
    </div>
</div>

@code {
    private bool isDropdownVisible = false;
    private bool isModalVisible = false;
    private bool isAddModalVisible = false;
    private bool isEditModalVisible = false;
    private int itemToDeleteId = -1;

    private List<Imovel> imoveis = new List<Imovel>
    {
        new Imovel { Id = 1, Designacao = "Apartamento A", Localizacao = "Lisboa", ValorPropriedade = 200000.00m, ValorRenda = 1000.00m, TaxaCondominio = 50.00m, DespesasAnuais = 1200.00m, PercentagemPropriedade = 0.05m },
        new Imovel { Id = 2, Designacao = "Casa B", Localizacao = "Porto", ValorPropriedade = 300000.00m, ValorRenda = 1500.00m, TaxaCondominio = 75.00m, DespesasAnuais = 1800.00m, PercentagemPropriedade = 0.06m },
        new Imovel { Id = 3, Designacao = "Loja C", Localizacao = "Coimbra", ValorPropriedade = 150000.00m, ValorRenda = 800.00m, TaxaCondominio = 40.00m, DespesasAnuais = 960.00m, PercentagemPropriedade = 0.04m }
    };

    private Imovel newImovel = new Imovel();
    private Imovel editImovel = new Imovel();

    private void ToggleDropdown() => isDropdownVisible = !isDropdownVisible;
    private void CloseDropdown() => isDropdownVisible = false;
    private string GetArrowRotation() => isDropdownVisible ? "transform: rotate(225deg);" : "transform: rotate(45deg);";

    private void ShowDeleteModal(int id)
    {
        itemToDeleteId = id;
        isModalVisible = true;
    }

    private void HideDeleteModal() => isModalVisible = false;

    private void ConfirmDelete()
    {
        imoveis.RemoveAll(i => i.Id == itemToDeleteId);
        HideDeleteModal();
    }

    private void ShowAddModal()
    {
        isAddModalVisible = true;
        newImovel = new Imovel();
    }

    private void HideAddModal() => isAddModalVisible = false;

    private void AddImovel()
    {
        newImovel.Id = imoveis.Count + 1;
        imoveis.Add(newImovel);
        HideAddModal();
    }

    private void ShowEditModal(Imovel imovel)
    {
        editImovel = new Imovel
        {
            Id = imovel.Id,
            Designacao = imovel.Designacao,
            Localizacao = imovel.Localizacao,
            ValorPropriedade = imovel.ValorPropriedade,
            ValorRenda = imovel.ValorRenda,
            TaxaCondominio = imovel.TaxaCondominio,
            DespesasAnuais = imovel.DespesasAnuais,
            PercentagemPropriedade = imovel.PercentagemPropriedade
        };
        isEditModalVisible = true;
    }

    private void HideEditModal() => isEditModalVisible = false;

    private void SaveEdit()
    {
        var imovel = imoveis.FirstOrDefault(i => i.Id == editImovel.Id);
        if (imovel != null)
        {
            imovel.Designacao = editImovel.Designacao;
            imovel.Localizacao = editImovel.Localizacao;
            imovel.ValorPropriedade = editImovel.ValorPropriedade;
            imovel.ValorRenda = editImovel.ValorRenda;
            imovel.TaxaCondominio = editImovel.TaxaCondominio;
            imovel.DespesasAnuais = editImovel.DespesasAnuais;
            imovel.PercentagemPropriedade = editImovel.PercentagemPropriedade;
        }
        HideEditModal();
    }

    private string modalVisibility => isModalVisible ? "visible" : "";
    private string addModalVisibility => isAddModalVisible ? "visible" : "";
    private string editModalVisibility => isEditModalVisible ? "visible" : "";

    private class Imovel
    {
        public int Id { get; set; }
        public string Designacao { get; set; }
        public string Localizacao { get; set; }
        public decimal ValorPropriedade { get; set; }
        public decimal ValorRenda { get; set; }
        public decimal TaxaCondominio { get; set; }
        public decimal DespesasAnuais { get; set; }
        public decimal PercentagemPropriedade { get; set; }
    }

    private void Logout()
    {
        // Logic for logging out (if needed)
        // Redirect to the homepage
        Navigation.NavigateTo("http://localhost:5228");
    }
}